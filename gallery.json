/* gallery-fix.js
 * Perbaikan fungsi loadGallery untuk GTX EduKids
 * - Mendukung format JSON: either top-level array or { gallery: [...] }
 * - Menggunakan properti `image` (fallback ke `url`/`src` jika ada)
 * - Menambahkan `alt` dan `loading="lazy"`
 * - Error handling dan pesan kosong
 *
 * Cara pakai:
 * 1) Ganti fungsi loadGallery di script.js dengan isi file ini, atau
 * 2) Tambahkan file ini ke project dan panggil setelah script.js di index.html:
 *    <script src="gallery-fix.js"></script>
 */

// safe-escape untuk teks yang akan dimasukkan ke DOM
function escapeHtml(str) {
  if (str === null || str === undefined) return '';
  return String(str).replace(/[&<>\"']/g, function (s) {
    return ({
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    })[s];
  });
}

async function loadGallery() {
  // cari container gallery â€” dukung beberapa kemungkinan selector
  const container = document.querySelector('.gallery-grid') || document.querySelector('#gallery .gallery-grid');
  if (!container) {
    console.warn('[gallery-fix] gallery container (.gallery-grid) tidak ditemukan di DOM.');
    return;
  }

  try {
    // fetch dengan cache-busting jika perlu
    const resp = await fetch('gallery.json', { cache: 'no-cache' });
    if (!resp.ok) throw new Error('HTTP ' + resp.status);

    const data = await resp.json();
    // dukung dua format: array langsung atau object { gallery: [...] }
    const items = Array.isArray(data) ? data : (Array.isArray(data.gallery) ? data.gallery : []);

    // kosongkan container sebelum render
    container.innerHTML = '';

    if (!items || items.length === 0) {
      container.innerHTML = '<p class="gallery-empty">Tidak ada gambar di galeri.</p>';
      return;
    }

    items.forEach(item => {
      // dukungan fallback properti (image, url, src)
      const src = item.image || item.url || item.src || '';
      const caption = item.caption || item.title || '';

      const card = document.createElement('div');
      card.className = 'gallery-item';

      // buat elemen <img>
      const img = document.createElement('img');
      img.src = src;
      img.alt = escapeHtml(caption) || 'Gallery image';
      img.loading = 'lazy';
      img.decoding = 'async';

      // opsional: jika src kosong, jangan coba tampilkan gambar
      if (!src) {
        const placeholder = document.createElement('div');
        placeholder.className = 'gallery-placeholder';
        placeholder.textContent = caption || 'No image available';
        card.appendChild(placeholder);
      } else {
        card.appendChild(img);
      }

      const p = document.createElement('p');
      p.className = 'caption';
      p.textContent = caption;
      card.appendChild(p);

      container.appendChild(card);
    });

  } catch (err) {
    console.error('[gallery-fix] Gagal memuat gallery.json:', err);
    container.innerHTML = '<p class="gallery-error">Gagal memuat galeri. Silakan coba lagi nanti.</p>';
  }
}

// Pastikan function dipanggil satu kali saat DOM siap. Jika script.js lama
// sudah memanggil loadGallery(), kamu bisa menghapus pemanggilan ganda.
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', loadGallery);
} else {
  // jika DOM sudah siap, panggil langsung
  loadGallery();
}
